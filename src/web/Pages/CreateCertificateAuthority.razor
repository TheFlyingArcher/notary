@page "/ca/create"

<MudContainer MaxWidth="MaxWidth.Large">
    @if (IsLoading)
    {
        <MudProgressLinear Indeterminate="true" Color="Color.Primary" Striped="true" Size="Size.Medium" />
    }
    <MudText Typo="Typo.h4">Create Certificate Authority</MudText>
    <MudDivider Class="mb-3" />
    @if (_formErrors.Length > 0)
    {
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">@($"Errors ({_formErrors.Length})")</MudText>
                @foreach (var error in _formErrors)
                {
                    <MudText Color="@Color.Error">
                        @error
                    </MudText>
                }
            </MudPaper>
        </MudItem>
        <MudDivider Class="mb-3" />
    }

    <MudForm @ref="_mudForm" Model="ViewModel" @bind-IsValid="_formValid" @bind-Errors="_formErrors">
        <MudSelect @bind-Value="@ViewModel.ParentCaSlug" Required="true"
            RequiredError="Select a parent CA or select No Parent" Label="Select Parent CA"
            HelperText="Select a Certificate Authority" Placeholder="Please Select">
            <MudSelectItem Value="@("nop")">No Parent</MudSelectItem>
            @foreach (var ca in ViewModel.CertificateAuthorities)
            {
                <MudSelectItem Value="@ca.Slug">@ca.Name</MudSelectItem>
            }
        </MudSelect>
        <MudTextField @bind-Value="ViewModel.Name" Label="Name" Required="true"
            Validation="@(new Func<string, IEnumerable<string>>(ValidateName))"></MudTextField>
        <MudTextField @bind-Value="ViewModel.LengthInMonths" Label="CA Validity"
            HelperText="Enter the CA validity length in months e.g. 48"
            Validation="@(new Func<int, IEnumerable<string>>(ValidateExpiration))"></MudTextField>
        <MudSwitch @bind-Value="ViewModel.IsIssuer" Label="Is Issuer"></MudSwitch>
        <MudTextField Required="false" HelperText="The endpoint which contains the CRL"
            @bind-Value="@ViewModel.CrlEndpoint" Label="CRL Endpoint">
        </MudTextField>
        <MudTextField @bind-Value="ViewModel.CommonName" Required="true" RequiredError="Please enter a CA Common Name"
            HelperText="The Common Name for the CA certificate"></MudTextField>
        <MudDivider Class="my-3" />
        <MudLink OnClick="@(() => ViewModel.AdditionalSubjectExpanded = !ViewModel.AdditionalSubjectExpanded)">
            Additional Properties</MudLink>
        <MudCollapse Expanded="ViewModel.AdditionalSubjectExpanded">
            <MudTextField @bind-Value="@ViewModel.Country" Label="Country" Disabled="ViewModel.SelectedCa!=null">
            </MudTextField>
            <MudTextField @bind-Value="@ViewModel.Locale" Label="Locale" Disabled="ViewModel.SelectedCa!=null">
            </MudTextField>
            <MudTextField @bind-Value="@ViewModel.Organization" Label="Organization"
                Disabled="ViewModel.SelectedCa!=null"></MudTextField>
            <MudTextField @bind-Value="@ViewModel.OrganizationalUnit" Label="Org Unit"
                Disabled="ViewModel.SelectedCa!=null"></MudTextField>
            <MudTextField @bind-Value="@ViewModel.StateProvince" Label="State" Disabled="ViewModel.SelectedCa!=null">
            </MudTextField>
        </MudCollapse>
        <MudDivider Class="my-3" />
        <MudLink OnClick="@(()=>ViewModel.KeyAlgorithmExpanded=!ViewModel.KeyAlgorithmExpanded)">Private Key Algorithm
        </MudLink>
        <MudCollapse Expanded="ViewModel.KeyAlgorithmExpanded">
            <MudRadioGroup @bind-Value="@ViewModel.KeyType" Disabled="ViewModel.SelectedCa!=null">
                <MudRadio Value="@Algorithm.RSA">RSA</MudRadio>
                <MudRadio Value="@Algorithm.EllipticCurve">Elliptic Curve</MudRadio>
            </MudRadioGroup>
            <MudDivider />
            @if (ViewModel.KeyType == Algorithm.RSA)
            {
                <MudRadioGroup @bind-Value="@ViewModel.KeyLength" T="int" Disabled="ViewModel.SelectedCa!=null">
                    <MudRadio Value="@(2048)">2048 bit</MudRadio>
                    <MudRadio Value="@(3072)">3072 bit</MudRadio>
                    <MudRadio Value="@(4096)">4096 bit</MudRadio>
                </MudRadioGroup>
            }
            else if (ViewModel.KeyType == Algorithm.EllipticCurve)
            {
                <MudRadioGroup @bind-Value="@ViewModel.Curve" T="EllipticCurve" Disabled="ViewModel.SelectedCa!=null">
                    <MudRadio Value="@(EllipticCurve.P256)">P256</MudRadio>
                    <MudRadio Value="@(EllipticCurve.P384)">P384</MudRadio>
                    <MudRadio Value="@(EllipticCurve.P521)">P521</MudRadio>
                    <MudRadio Value="@(EllipticCurve.P256K)">P256K</MudRadio>
                </MudRadioGroup>
            }
        </MudCollapse>
        <div class="d-flex align-center justify-space-between">
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto" OnClick="OnSubmitAsync">Submit
            </MudButton>
        </div>
    </MudForm>
</MudContainer>